name: Brute Pasta

env:
  AZURE_WEBAPP_NAME: brutepasta-dev
  AZURE_WEBAPP_PACKAGE_PATH: '.'

permissions:
    id-token: write
    contents: read

on:
  push:
    branches:
        - main
        - develop
        - 'feature/**'
  pull_request:
    branches:
        - main
        - develop
        - 'feature/**'

jobs:
  build:
    name: Build
    runs-on: windows-latest

    strategy:
      matrix:
        dotnet-version: ['7.0.x']

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Install the .NET Core workload
    - name: Install .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Dotnet Publish
      run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'


    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dotnet-results
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  iac:
    name: Create IaC Terraform

    runs-on: windows-latest
    needs: build

    steps:
        - uses: actions/checkout@v3
        - uses: hashicorp/setup-terraform@v3
          with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        
        - name: Terraform fmt
          id: fmt
          run: terraform fmt -check
          continue-on-error: false
        
        - name: Terraform Init
          id: init
          run: terraform init
        
        - name: Terraform Validate
          id: validate
          run: terraform validate -no-color
        
        - name: Terraform Apply
          run: terraform apply -auto-approve
          env:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

  azure-login:
    name: Azure Login
    runs-on: windows-latest
    steps:
        - name: Azure login
          uses: Azure/login@v1.5.1
          with:
            creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
    
        - name: Azure CLI script
          uses: Azure/CLI@v1.0.8
          with:
            azcliversion: latest
            inlineScript: |
              az account show

  deploy:
    name: Deploy
    runs-on: windows-latest
    needs: iac

    steps:
        - name: Download artifact from build job
          uses: actions/download-artifact@v3
          with:
            name: dotnet-results
        
        - name: Deploy to Azure Web App
          id: deploy-to-webapp
          uses: Azure/webapps-deploy@v3.0.0
          with:
            app-name: ${{ env.AZURE_WEBAPP_NAME }}
